 wine_dataset Italian wines dataset
 
  Pattern recognition is the process of training a neural network to assign
  the correct target classes to a set of input patterns.  Once trained the
  network can be used to classify patterns it has not seen before.
 
  This dataset can be used to create a neural network that classifies
  wines from three winerys in Italy based on constituents found through
  chemical analysis.
  
  LOAD wine_dataset.MAT loads these two variables:
 
    wineInputs - a 13x178 matrix of thirteen attributes of 178 wines.
 
      1. Alcohol
      2. Malic acid
      3. Ash
      4. Alcalinity of ash  
      5. Magnesium
      6. Total phenols
      7. Flavanoids
      8. Nonflavanoid phenols
      9. Proanthocyanins
     10. Color intensity
     11. Hue
     12. OD280/OD315 of diluted wines
     13. Proline
 
    wineTargets - a 3x178 matrix of 7200 associated class vectors
    defining which of three classes each input is assigned to.  Classes
    are represented by a 1 in row 1, 2 or 3.
 
      1. Vinyard #1
      2. Vinyard #2
      3. Vinyard #3
 
  [X,T] = wine_dataset loads the inputs and targets into
  variables of your own choosing.
 
  For an intro to pattern recognition with the NN Pattern Recognition Tool
  click "Load Example Data Set" in the second panel and pick this dataset.
 
  Here is how to design a pattern recognition neural network with this
  data at the command line.  See patternnet for more details.
 
    [x,t] = wine_dataset;
    net = patternnet(10);
    net = train(net,x,t);
    view(net)
    y = net(x);
    
  Clustering is the process of training a neural network on patterns
  so that the network comes up with its own classifications according
  to pattern similarity and relative topology.  This is useful for gaining
  insight into data, or simplifying it before further processing.
 
  For an intro to clustering with the NN Clustering Tool
  click "Load Example Data Set" in the second panel and pick this dataset.
 
  Here is how to design an 8x8 clustering neural network with this data at
  the command line.  See selforgmap for more details.
 
    x = simplecluster_dataset;
    plot(x(1,:),x(2,:),'+')
    net = selforgmap([8 8]);
    net = train(net,x);
    view(net)
    y = net(x);
    classes = vec2ind(y);
    
  See also nprtool, patternnet, nctool, selforgmap, nndatasets.
 
  ----------
 
  This data is available from the UCI Machine Learning Repository.
 
    http://mlearn.ics.uci.edu/MLRepository.html
 
  Murphy,P.M., Aha, D.W. (1994). UCI Repository of machine learning
  databases [http://www.ics.uci.edu/~mlearn/MLRepository.html].
  Irvine, CA: University of California,  Department of Information
  and Computer Science.
 
  Donated to the repository by Stefan Aeberhard.